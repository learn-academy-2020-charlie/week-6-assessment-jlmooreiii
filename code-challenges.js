// ASSESSMENT 6: Coding Practical Questions


// --------------------1) Create a function that takes in an array of objects and returns a sentence about each person with their names capitalized.

var people = [
  { name: "ford prefect", occupation: "hitchhiker" },
  { name: "zaphod beeblebrox", occupation: "president of the galaxy" },
  { name: "arthur dent", occupation: "radio employee" }
]
// Expected output example: "Ford Prefect is a hitchhiker." "Zaphod Beeblebrox is a president of the galaxy." "Arthus Dent is a radio employee."

// Declare a function that takes in an array of objects
const giveInfo = (array) => {
  // I need to iterate through all of the objects and perform the same fuction. I will prbably use a .map, which will eventaully store strings. For my final return, I plan to reiterate through the array created by this .map and return each string.
  let arrayOfFixedNamedObjects = array.map(value => {
    // I will craete a deep copy of the object so that the original input is not altered
    let copyObject = JSON.parse(JSON.stringify(value));
    // Inside of my map, I need to isolate the name first, because I need to capitalize the first and last names.To isolate the names. I'm going to do a .split on the string and store the newly created arry into a new variable

    let charArray = copyObject.name.split("");
    // Then I need to capitalize the first letter of the array.
    charArray[0] = charArray[0].toUpperCase();
    
    // Then I need to find where the first space is and capitalize the character immedately after it
    charArray[charArray.indexOf(" ") + 1] = charArray[charArray.indexOf(" ") + 1].toUpperCase();
    // Then I will join this updated array into a new string name to be called upon later. 
    let updatedName = charArray.join("");
    // The new name will be replace the old name of the copied object
    copyObject.name = updatedName;
    
    // Return a sting of the final output
    return `${copyObject.name} is a ${copyObject.occupation}.`;
  }) // This will end the .map

  // Now I just need to iterate through the array generated by the proevious .map and return the sentences one-by-one
  for (let i = 0; i < arrayOfFixedNamedObjects.length; i++) {
    console.log(arrayOfFixedNamedObjects[i]);
  }
  //Ends the for loop
} // Ends function

// Test to make sure that the function works
console.log("-----CHALLENGE 1-----");
giveInfo(people);


// --------------------2) Create a function that takes in a mixed data array and returns an array of only the remainder of the numbers when divided by 3.

var testingArray1 = [23, "Heyyyy!", 45, -9, 0, "Yo", false]
// Expected output: [ 2, 0, -0, 0 ]
var testingArray2 = [5, "Hola", 43, -34, "greetings", true]
// Expected output: [ 2, 1, -1 ]

// Declare a function that take in an array
const remainder3 = (array) => {
  // Create an empty array to store the results of the filtering we are about to do
  let remainderArray = [];
  // Use a for loop to iterate through the array
  for (let i = 0; i < array.length; i++) {
    // Use typeof to only get the numbers 
    if (typeof array[i] === "number") {
      // For the numbers that get through, use the modulo operator to get the result when the numbers are divided by three. Return this
      remainderArray.push(array[i] % 3);
    }
  }
  return remainderArray; 
}
// Test to make sure that the function works
console.log("-----CHALLENGE 2-----");
console.log(remainder3(testingArray1));
console.log(remainder3(testingArray2));





// --------------------3) Create a function that takes in two arrays as arguments returns one array with no duplicate values.

var testingArray3 = [3, 7, "hi", 10, 3, "hello", 4, "hi"]
var testingArray4 = [7, "hi", 3, 1, "hi", 4, "hello", 4, 7]
// Expected output: [ 3, 7, "hi", 10, "hello", 4, 1 ]

// Declare a function that takes in two arrays
const combineNoRepeat = (array1, array2) => {
  // Create an array that is the combination of the two input arrays
  let newArray = array1.concat(array2);
  // Create a holding array 
  let finalArray = [];
  // Iterate thru the combined array using for loop
  for (let i = 0; i < newArray.length; i++) {
    if (!finalArray.includes(newArray[i])) {
      // Push each value from the combined array into the empty array if the value is not present
      finalArray.push(newArray[i]);
    }
  }
  return finalArray
}

// Test to see that the method works
console.log("-----CHALLENGE 3-----");
console.log(testingArray3);
console.log(testingArray4);
console.log(combineNoRepeat(testingArray3, testingArray4));
